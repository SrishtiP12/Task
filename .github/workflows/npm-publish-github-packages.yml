name: Node.js Package + Docker

on:
  release:
    types: [created]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      # Install dependencies
      - name: Install dependencies
        run: npm ci

      # Patch Jest to transform axios (ESM)
      - name: Fix Jest config for axios
        run: |
          if [ ! -f jest.config.js ]; then
            echo "export default { transformIgnorePatterns: ['node_modules/(?!(axios)/)'] };" > jest.config.js
          fi

      # Run tests (fail build if they fail here)
      - name: Run tests
        run: npm test -- --watchAll=false

  publish-gpr:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://npm.pkg.github.com/

      - run: npm ci
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}

  dockerhub:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Get package version from package.json
      - name: Get package version
        id: pkg
        run: echo "VERSION=$(node -p \"require('./package.json').version\")" >> $GITHUB_ENV

      # Login to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build Docker image with dynamic tags
      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/my-node-app:latest \
                       -t ${{ secrets.DOCKER_USERNAME }}/my-node-app:${{ env.VERSION }} .

      # Push Docker image
      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/my-node-app:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/my-node-app:${{ env.VERSION }}
